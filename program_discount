/*C#*/

/*Написать программу вычисления стоимости покупки с учетом скидки. Скидка в 3% предоставляется, если
сумма покупки больше 500 руб., в 5% — если сумма больше 1000 руб. */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace lerning
{
    class Product
    {
        int id;
        public int ID
        {
            get { return id; }
            set { id = value; }
        }
        string NameProd;
        double Price;
        Product[] assort;
        public Product()
        {
            assort = new Product[1];
        }
        public Product(int size)
        {
            assort = new Product[size];
        }
        public Product(int id, string name, double price)
        {
            ID = id;
            NameProd = name; Price = price;
        }
        public void Display()  //метод вывода ассортимента продукции на экран
        {
            Console.WriteLine(" Артикул  Наименование  Цена \n");
            foreach (Product el in assort)
            {
                Console.WriteLine(" {0,5}{1,11}{2,11}", el.id, el.NameProd, el.Price);
            }
        }
        public double GetPrice(int id)  //метод получения цены продукции по id
        {
            double res = 0;
            foreach (Product elem in assort)
            {
                if (elem.id == id)
                {
                    res = elem.Price;
                    break;
                }
            }
            return res;
        }
        public string GetNamePr(int id)  //метод получения названия продукта по id
        {
            string res = "";
            foreach (Product elem in assort)
            {
                if (elem.ID == id)
                {
                    res = elem.NameProd;
                    break;
                }
            }
            return res;
        }
        public Product this[int index]
        {
            get{return assort[index];}
            set { assort[index] = value; }
        }
    }
    class Purchases : Product
    {
        int quantity;
        Purchases [] purchases;
        public Purchases()
        {

        }
        public Purchases(int size)
        {
            purchases = new Purchases[size];
        }
        public Purchases(int _id, int _quantity = 0)
        {
            ID = _id;
            quantity = _quantity;
        }
        public void sum(Product assort)  //метод расчета стоимости покупки
        {
            Console.WriteLine("   \n    Ваш чек! \n");
            Console.WriteLine(" Артикул  Наим-ние  Цена  Кол-во Стоим \n");
                       
            double sum = 0;
            foreach (Purchases el in purchases)
            {
                string name = assort.GetNamePr(el.ID);
                double price = assort.GetPrice(el.ID);
                double cost = el.quantity * price;
                Console.WriteLine(" {0}{1,11}    {2:0.00}{3,5}    {4:0.00}", el.ID, name, price, el.quantity, cost);
                sum += cost;
            }
            Console.WriteLine(" \nСтоимость без скидки: {0:0.00} руб.\n", sum);

            if (sum > 500 && sum < 1000)
            {
                Console.WriteLine(" \nОбщая стоимость со скидкой 3%: {0:0.00} руб. Размер скидки: {1:0.00} руб.\n", sum - Discont(sum, 3), Discont(sum, 3));
            }
            if (sum > 1000)
            {
                Console.WriteLine(" \nОбщая стоимость со скидкой 5%: {0:0.00} руб. Размер скидки: {1:0.00} руб.\n", sum - Discont(sum, 5), Discont(sum, 5));
            }           
        }
        public double Discont(double sum, int proc)  //метод расчета суммы скидки
        {
            return (sum * proc) / 100;
        }
        public void resizeBasket(int size)
        {
            Array.Resize(ref purchases, size);
        }
        
        public Purchases this[int index]
        {
            get { return purchases[index]; }
            set { purchases[index] = value; }
        }
        
    }
    class Program
    {
        static void Main(string[] args)
        {
            int size = 5; //размер ассортимента продукции
            Product assort = new Product(size);
            assort[0] = new Product(111, "молоко", 2.05);
            assort[1] = new Product(112, "хлеб", 1.95);
            assort[2] = new Product(113, "кефир", 1.84);
            assort[3] = new Product(114, "сало", 12.06);
            assort[4] = new Product(115, "картошка", 1.80);

            Console.WriteLine(" Доступная продукция в магазине: \n");
            assort.Display();
            Console.WriteLine(" _________________________________ \n");
            Console.WriteLine(" ЕСЛИ ХОТИТЕ СДЕЛАТЬ ПОКУПКИ, НАЖМИТЕ - 1 ИЛИ 0 ЧТОБЫ ВЫЙТИ!  \n");
            try
            {
            
                int ans = Convert.ToInt32(Console.ReadLine());
                int id = 0;
                int quantity = 0;

                if (ans != 0)
                {
                    Console.WriteLine(" ЧТОБЫ ДОБАВИТЬ В КОРЗИНУ - ВВЕДИТЕ АРТИКУЛ И КОЛИЧЕСТВО!  \n");
                    Console.WriteLine(" ЧТОБЫ ЗАКОНЧИТЬ ПОКУПКИ НАЖМИТЕ 0!  \n");
                    int sizeBacket = size * 2;    //предварительный размер корзины
                    
                    Purchases basket = new Purchases(sizeBacket); //корзина
                    int newsizebasket = 0;

                    for (int i = 0; i < sizeBacket; i++)
                    {

                        Console.Write(" Артикул: ");
                        id = Convert.ToInt32(Console.ReadLine());
                        if (id == 0)
                        {
                            sizeBacket = i;  //это мой способ торможения цикла
                            quantity = 1;
                        }
                        else
                        {                            
                            if (assort.GetNamePr(id) == "") { Console.WriteLine("Такой продукции нет в ассортименте!"); return; }
                            Console.Write(" Количество: ");
                            quantity = Convert.ToInt32(Console.ReadLine());                            
                        }
                        
                       basket[i] = new Purchases(id, quantity); // покупки в корзину
                        newsizebasket = i;
                        
                    }

                    basket.resizeBasket(newsizebasket); //переопределение размера корзины
                    basket.sum(assort); //расчет стоимости и скидки                                      
                }
                else
                {
                    return;
                }
                     
            }
            catch { Console.WriteLine("Сбой программы! Начните заново!"); }
            Console.ReadLine();  
        }

    }
}
